{"version":3,"sources":["bll/reducer.js","ui/components/Modal/Modal.js","ui/components/UpdateEventForm/UpdateEventForm.js","ui/ListOfEvents.js","ui/components/AddEventForm/AddEventForm2.js","App.js","bll/store.js","index.js"],"names":["ADD_EVENT","DELETE_EVENT","UPDATE_EVENT","initialState","holidays","notes","events","addEvent","event","type","deleteEvent","eventId","eventType","updateEvent","Modal","props","activeModal","setActiveModal","children","className","onClick","e","stopPropagation","UpdateEventForm","React","memo","date","activeEventId","useState","setEventType","eventName","setEventName","where","setWhere","inWhatTime","setInWhatTime","budget","setBudget","note","setNote","onChangeEventType","target","value","onChangeEventName","dispatch","useDispatch","onClickUpdate","id","v1","onSubmit","FormGroup","TextField","name","placeholder","onChange","Select","MenuItem","Button","style","fontFamily","variant","color","ListOfEvents","activeUpdateModal","setActiveUpdateModal","setActiveEventId","useSelector","state","app","currentDateAsString","toISOString","Paper","elevation","filter","holiday","map","icon","faTrash","size","marginRight","faPencilAlt","AddEventForm2","onClickAdd","App","Date","setDate","dayChosen","setDayChosen","textAlign","onClickDay","rootReducer","combineReducers","action","persistedState","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunkMiddleware","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf746611.chunk.js","sourcesContent":["const ADD_EVENT = 'ADD_EVENT';\r\nconst DELETE_EVENT = 'DELETE_EVENT';\r\nconst UPDATE_EVENT = 'UPDATE_EVENT';\r\n\r\nconst initialState = {\r\n  holidays: [],\r\n  notes: [],\r\n  events: [],\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EVENT: {\r\n      if (action.event.eventType === 'holidays') {\r\n        return { ...state, holidays: [...state.holidays, action.event] };\r\n      } else if (action.event.eventType === 'notes') {\r\n        return { ...state, notes: [...state.notes, action.event] };\r\n      } else if (action.event.eventType === 'events') {\r\n        return { ...state, events: [...state.events, action.event] };\r\n      }\r\n      break;\r\n    }\r\n\r\n    case DELETE_EVENT: {\r\n      if (action.eventType === 'holidays') {\r\n        return { ...state, holidays: [...state.holidays.filter(holiday => holiday.id !== action.eventId)] };\r\n      } else if (action.eventType === 'notes') {\r\n        return { ...state, notes: [...state.notes.filter(note => note.id !== action.eventId)] };\r\n      } else if (action.eventType === 'events') {\r\n        return { ...state, events: [...state.events.filter(event => event.id !== action.eventId)] };\r\n      }\r\n      break;\r\n    }\r\n\r\n    case UPDATE_EVENT: {\r\n      if (action.eventType === 'holidays') {\r\n        return { ...state, holidays: [...state.holidays.map(holiday => (holiday.id === action.eventId ? (holiday = action.updateEvent) : holiday))] };\r\n      } else if (action.eventType === 'notes') {\r\n        return { ...state, notes: [...state.notes.map(note => (note.id === action.eventId ? (note = action.updateEvent) : note))] };\r\n      } else if (action.eventType === 'events') {\r\n        return { ...state, events: [...state.events.map(event => (event.id === action.eventId ? (event = action.updateEvent) : event))] };\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addEvent = event => ({\r\n  type: ADD_EVENT,\r\n  event,\r\n});\r\nexport const deleteEvent = (eventId, eventType) => ({\r\n  type: DELETE_EVENT,\r\n  eventId,\r\n  eventType,\r\n});\r\nexport const updateEvent = (eventId, eventType, updateEvent) => ({\r\n  type: UPDATE_EVENT,\r\n  eventId,\r\n  eventType,\r\n  updateEvent,\r\n});\r\n","import React from 'react';\r\nimport './Modal.css';\r\n\r\nexport const Modal = props => {\r\n  const { activeModal, setActiveModal, children } = props;\r\n  return (\r\n    <div\r\n      className={activeModal ? 'modal modalActive' : 'modal'}\r\n      onClick={() => {\r\n        setActiveModal(false);\r\n      }}\r\n    >\r\n      <div\r\n        className={\r\n          activeModal ? 'modalContant modalContantactive' : 'modalContant'\r\n        }\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FormGroup, TextField, Button, Select, MenuItem } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateEvent } from '../../../bll/reducer';\r\nimport { v1 } from 'uuid';\r\n\r\nexport const UpdateEventForm = React.memo(props => {\r\n  const { date, activeEventId } = props;\r\n  const [eventType, setEventType] = useState('holidays');\r\n  const [eventName, setEventName] = useState('');\r\n  const [where, setWhere] = useState('');\r\n  const [inWhatTime, setInWhatTime] = useState('');\r\n  const [budget, setBudget] = useState('');\r\n  const [note, setNote] = useState('');\r\n  const onChangeEventType = e => {\r\n    setEventType(e.target.value);\r\n  };\r\n  const onChangeEventName = e => {\r\n    setEventName(e.target.value);\r\n  };\r\n  const onChangeWhere = e => {\r\n    setWhere(e.target.value);\r\n  };\r\n  const onChangeInWhatTime = e => {\r\n    setInWhatTime(e.target.value);\r\n  };\r\n  const onChangeBudget = e => {\r\n    setBudget(e.target.value);\r\n  };\r\n  const onChangeNote = e => {\r\n    setNote(e.target.value);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const onClickUpdate = event => {\r\n    if (event === 'holidays') {\r\n      dispatch(\r\n        updateEvent(activeEventId, 'holidays', {\r\n          date: date,\r\n          id: v1(),\r\n          eventType: eventType,\r\n          eventName: eventName,\r\n          where: where,\r\n          inWhatTime: inWhatTime,\r\n        })\r\n      );\r\n    } else if (event === 'events') {\r\n      dispatch(\r\n        updateEvent(activeEventId, 'events', {\r\n          date: date,\r\n          eventType: eventType,\r\n          eventName: eventName,\r\n          budget: budget,\r\n        })\r\n      );\r\n    } else if (event === 'notes') {\r\n      dispatch(\r\n        updateEvent(activeEventId, 'notes', {\r\n          date: date,\r\n          eventType: eventType,\r\n          eventName: eventName,\r\n          note: note,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {eventType === 'holidays' && (\r\n        <form\r\n          onSubmit={() => {\r\n            onClickUpdate('holidays');\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <TextField name='eventName' placeholder='Название события' onChange={onChangeEventName} value={eventName} />\r\n            <Select name='eventType' value={eventType} onChange={onChangeEventType}>\r\n              <MenuItem value={'holidays'}>Приздник</MenuItem>\r\n              <MenuItem value={'notes'}>Заметка</MenuItem>\r\n              <MenuItem value={'events'}>Событие</MenuItem>\r\n            </Select>\r\n            <TextField name='where' placeholder='Куда идти?' onChange={onChangeWhere} value={where} />\r\n            <TextField name='inWhatTime' placeholder='Во сколько?' onChange={onChangeInWhatTime} value={inWhatTime} />\r\n          </FormGroup>\r\n          <Button style={{ fontFamily: 'Caveat' }} variant='contained' color='primary' type='submit'>\r\n            Сохранить изменения\r\n          </Button>\r\n        </form>\r\n      )}\r\n      {eventType === 'notes' && (\r\n        <form\r\n          onSubmit={() => {\r\n            onClickUpdate('notes');\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <TextField name='eventName' placeholder='Название события' onChange={onChangeEventName} value={eventName} />\r\n            <Select name='eventType' value={eventType} onChange={onChangeEventType}>\r\n              <MenuItem value={'notes'}>заметка</MenuItem>\r\n              <MenuItem value={'events'}>событие</MenuItem>\r\n              <MenuItem value={'holidays'}>приздник</MenuItem>\r\n            </Select>\r\n            <TextField name='notes' placeholder='Заметка' onChange={onChangeNote} value={note} />\r\n          </FormGroup>\r\n          <Button style={{ fontFamily: 'Caveat' }} variant='contained' color='primary' type='submit'>\r\n            Сохранить изменения\r\n          </Button>\r\n        </form>\r\n      )}\r\n      {eventType === 'events' && (\r\n        <form\r\n          onSubmit={() => {\r\n            onClickUpdate('events');\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <TextField name='eventName' placeholder='Название события' onChange={onChangeEventName} value={eventName} />\r\n            <Select name='eventType' value={eventType} onChange={onChangeEventType}>\r\n              <MenuItem value={'events'}>событие</MenuItem>\r\n              <MenuItem value={'holidays'}>приздник</MenuItem>\r\n              <MenuItem value={'notes'}>заметка</MenuItem>\r\n            </Select>\r\n            <TextField name='events' placeholder='Бюджет' onChange={onChangeBudget} value={budget} />\r\n          </FormGroup>\r\n          <Button style={{ fontFamily: 'Caveat' }} variant='contained' color='primary' type='submit'>\r\n            Сохранить изменения\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport './ListOfEvents.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Paper } from '@material-ui/core/';\r\nimport { deleteEvent } from '../bll/reducer';\r\nimport { Modal } from '../ui/components/Modal/Modal';\r\nimport { UpdateEventForm } from '../ui/components/UpdateEventForm/UpdateEventForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const ListOfEvents = props => {\r\n  const { date } = props;\r\n  const [activeUpdateModal, setActiveUpdateModal] = useState(false);\r\n  const [activeEventId, setActiveEventId] = useState('');\r\n  const holidays = useSelector(state => state.app.holidays);\r\n  const notes = useSelector(state => state.app.notes);\r\n  const events = useSelector(state => state.app.events);\r\n  const currentDateAsString = date.toISOString();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <Paper elevation={3}>\r\n        <div className='list'>\r\n          <div className='holidays'>\r\n            {holidays\r\n\r\n              .filter(holiday => holiday.date === currentDateAsString)\r\n              .map(holiday => {\r\n                return (\r\n                  <div>\r\n                    <div className='event'>\r\n                      <h3 style={{ color: '#3f51b5' }}> {holiday.eventName}</h3>\r\n                      <div className='eventButtons'>\r\n                        <FontAwesomeIcon\r\n                          onClick={() => {\r\n                            dispatch(deleteEvent(holiday.id, 'holidays'));\r\n                          }}\r\n                          icon={faTrash}\r\n                          size='2x'\r\n                          style={{ marginRight: '10px', color: '#3f51b5' }}\r\n                        />\r\n                        <FontAwesomeIcon\r\n                          onClick={() => {\r\n                            setActiveUpdateModal(true);\r\n                            setActiveEventId(holiday.id);\r\n                          }}\r\n                          icon={faPencilAlt}\r\n                          size='2x'\r\n                          style={{ color: '#3f51b5' }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div> Время: {holiday.inWhatTime}</div>\r\n                    <div> Место: {holiday.where}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n\r\n          <div className='events'>\r\n            {events\r\n              .filter(event => event.date === currentDateAsString)\r\n              .map(event => {\r\n                return (\r\n                  <div>\r\n                    <div className='event'>\r\n                      <h3 style={{ color: '#3f51b5' }}> {event.eventName}</h3>\r\n                      <div className='eventButtons'>\r\n                        <FontAwesomeIcon\r\n                          onClick={() => {\r\n                            dispatch(deleteEvent(event.id, 'events'));\r\n                          }}\r\n                          icon={faTrash}\r\n                          size='2x'\r\n                          style={{ marginRight: '10px', color: '#3f51b5' }}\r\n                        />\r\n                        <FontAwesomeIcon\r\n                          onClick={() => {\r\n                            setActiveUpdateModal(true);\r\n                            setActiveEventId(event.id);\r\n                          }}\r\n                          icon={faPencilAlt}\r\n                          size='2x'\r\n                          style={{ color: '#3f51b5' }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div> Бюджет: {event.budget}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <div className='notes'>\r\n            {notes\r\n              .filter(note => note.date === currentDateAsString)\r\n              .map(note => {\r\n                return (\r\n                  <div>\r\n                    <div className='event'>\r\n                      <h3 style={{ color: '#3f51b5' }}> {note.eventName}</h3>\r\n                      <div className='eventButtons'>\r\n                        <FontAwesomeIcon\r\n                          onClick={() => {\r\n                            dispatch(deleteEvent(note.id, 'notes'));\r\n                          }}\r\n                          icon={faTrash}\r\n                          size='2x'\r\n                          style={{ marginRight: '10px', color: '#3f51b5' }}\r\n                        />\r\n                        <FontAwesomeIcon\r\n                          onClick={() => {\r\n                            setActiveUpdateModal(true);\r\n                            setActiveEventId(note.id);\r\n                          }}\r\n                          icon={faPencilAlt}\r\n                          size='2x'\r\n                          style={{ color: '#3f51b5' }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div> Заметка: {note.note}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n      <Modal activeModal={activeUpdateModal} setActiveModal={setActiveUpdateModal}>\r\n        <UpdateEventForm date={date} activeEventId={activeEventId} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FormGroup, TextField, Button, Select, MenuItem } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addEvent } from '../../../bll/reducer';\r\nimport { v1 } from 'uuid';\r\n\r\nexport const AddEventForm2 = React.memo(props => {\r\n  const { date } = props;\r\n  const [eventType, setEventType] = useState('holidays');\r\n  const [eventName, setEventName] = useState('');\r\n  const [where, setWhere] = useState('');\r\n  const [inWhatTime, setInWhatTime] = useState('');\r\n  const [budget, setBudget] = useState('');\r\n  const [note, setNote] = useState('');\r\n  const onChangeEventType = e => {\r\n    setEventType(e.target.value);\r\n  };\r\n  const onChangeEventName = e => {\r\n    setEventName(e.target.value);\r\n  };\r\n  const onChangeWhere = e => {\r\n    setWhere(e.target.value);\r\n  };\r\n  const onChangeInWhatTime = e => {\r\n    setInWhatTime(e.target.value);\r\n  };\r\n  const onChangeBudget = e => {\r\n    setBudget(e.target.value);\r\n  };\r\n  const onChangeNote = e => {\r\n    setNote(e.target.value);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const onClickAdd = event => {\r\n    if (event === 'holidays') {\r\n      dispatch(\r\n        addEvent({\r\n          date: date,\r\n          id: v1(),\r\n          eventType: eventType,\r\n          eventName: eventName,\r\n          where: where,\r\n          inWhatTime: inWhatTime,\r\n        })\r\n      );\r\n    } else if (event === 'events') {\r\n      dispatch(\r\n        addEvent({\r\n          date: date,\r\n          eventType: eventType,\r\n          eventName: eventName,\r\n          budget: budget,\r\n        })\r\n      );\r\n    } else if (event === 'notes') {\r\n      dispatch(\r\n        addEvent({\r\n          date: date,\r\n          eventType: eventType,\r\n          eventName: eventName,\r\n          note: note,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {eventType === 'holidays' && (\r\n        <form\r\n          onSubmit={() => {\r\n            onClickAdd('holidays');\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <TextField name='eventName' placeholder='Название события' onChange={onChangeEventName} value={eventName} />\r\n            <Select name='eventType' value={eventType} onChange={onChangeEventType}>\r\n              <MenuItem value={'holidays'}>Приздник</MenuItem>\r\n              <MenuItem value={'notes'}>Заметка</MenuItem>\r\n              <MenuItem value={'events'}>Событие</MenuItem>\r\n            </Select>\r\n            <TextField name='where' placeholder='Куда идти?' onChange={onChangeWhere} value={where} />\r\n            <TextField name='inWhatTime' placeholder='Во сколько?' onChange={onChangeInWhatTime} value={inWhatTime} />\r\n          </FormGroup>\r\n          <Button style={{ fontFamily: 'Caveat' }} variant='contained' color='primary' type='submit'>\r\n            Добавить\r\n          </Button>\r\n        </form>\r\n      )}\r\n      {eventType === 'notes' && (\r\n        <form\r\n          onSubmit={() => {\r\n            onClickAdd('notes');\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <TextField name='eventName' placeholder='Название события' onChange={onChangeEventName} value={eventName} />\r\n            <Select name='eventType' value={eventType} onChange={onChangeEventType}>\r\n              <MenuItem value={'notes'}>заметка</MenuItem>\r\n              <MenuItem value={'events'}>событие</MenuItem>\r\n              <MenuItem value={'holidays'}>приздник</MenuItem>\r\n            </Select>\r\n            <TextField name='notes' placeholder='Заметка' onChange={onChangeNote} value={note} />\r\n          </FormGroup>\r\n          <Button style={{ fontFamily: 'Caveat' }} variant='contained' color='primary' type='submit'>\r\n            Добавить\r\n          </Button>\r\n        </form>\r\n      )}\r\n      {eventType === 'events' && (\r\n        <form\r\n          onSubmit={() => {\r\n            onClickAdd('events');\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <TextField name='eventName' placeholder='Название события' onChange={onChangeEventName} value={eventName} />\r\n            <Select name='eventType' value={eventType} onChange={onChangeEventType}>\r\n              <MenuItem value={'events'}>событие</MenuItem>\r\n              <MenuItem value={'holidays'}>приздник</MenuItem>\r\n              <MenuItem value={'notes'}>заметка</MenuItem>\r\n            </Select>\r\n            <TextField name='events' placeholder='Бюджет' onChange={onChangeBudget} value={budget} />\r\n          </FormGroup>\r\n          <Button style={{ fontFamily: 'Caveat' }} variant='contained' color='primary' type='submit'>\r\n            Добавить\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { ListOfEvents } from './ui/ListOfEvents';\nimport Calendar from 'react-calendar';\nimport { Button, Paper } from '@material-ui/core/';\nimport { Modal } from './ui/components/Modal/Modal';\nimport { AddEventForm2 } from './ui/components/AddEventForm/AddEventForm2';\n\nfunction App() {\n  const [date, setDate] = useState(new Date());\n  const [dayChosen, setDayChosen] = useState(false);\n  const [activeModal, setActiveModal] = useState(false);\n  return (\n    <div className='App'>\n      <div className='containerApp'>\n        <Paper elevation={3} style={{ textAlign: 'center' }}>\n          <Calendar\n            onChange={setDate}\n            value={date}\n            onClickDay={() => {\n              setDayChosen(true);\n            }}\n          />\n\n          {dayChosen && (\n            <Button\n              style={{ fontFamily: 'Caveat' }}\n              variant='contained'\n              color='primary'\n              onClick={() => {\n                setActiveModal(true);\n              }}\n            >\n              Добавить\n            </Button>\n          )}\n        </Paper>\n        <ListOfEvents date={date} />\n        <Modal activeModal={activeModal} setActiveModal={setActiveModal}>\n          <AddEventForm2 date={date} />\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer } from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  app: reducer,\r\n});\r\nconst app = localStorage.getItem('app')\r\n  ? JSON.parse(localStorage.getItem('app'))\r\n  : {\r\n      holidays: [],\r\n      notes: [],\r\n      events: [],\r\n    };\r\nconst persistedState = { app };\r\nexport const store = createStore(rootReducer, persistedState, applyMiddleware(thunkMiddleware));\r\nstore.subscribe(() => {\r\n  localStorage.setItem('app', JSON.stringify(store.getState().app));\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './bll/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}